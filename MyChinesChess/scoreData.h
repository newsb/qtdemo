#ifndef SCOREDATA_H
#define SCOREDATA_H

static int SCORE_C[90]={
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110,
    110,110,110,110,110,110,110,110,110};
//ma 在棋盘上各个位置的分值
static int SCORE_M[90]={
    50,50,50,50,50,50,50,50,50,
    40,60,60,60,60,60,60,60,40,
    40,60,60,60,60,60,60,60,40,
    40,60,60,60,60,60,60,60,40,
    40,60,60,60,60,60,60,60,40,
    60,60,60,60,60,60,60,60,60,
    60,60,70,70,70,70,70,60,60,
    60,60,70,70,70,70,70,60,60,
    60,60,70,70,70,70,70,60,60,
    60,60,60,70,70,70,70,60,60};

//    enum TYPE         { CHE, MA, XIANG, SHI, JIANG, BING, PAO };
//static int chessScore[] = {100, 50, 20, 20, 1550, 10, 50};
static int SCORE_X[90]={
    0,0,20,0,0,0,20,0,0,
    0,0,0,0,0,0,0,0,0,
    20,0,0,0,20,0,0,0,20,
    0,0,0,0,0,0,0,0,0,
    0,0,20,0,0,0,20,0,0,
    0,0,20,0,0,0,20,0,0,
    0,0,0,0,0,0,0,0,0,
    20,0,0,0,20,0,0,0,20,
    0,0,0,0,0,0,0,0,0,
    0,0,20,0,0,0,20,0,0
  };
static int SCORE_S[90]={
    0,0,0,20,0,20,0,0,0,
    0,0,0,0,20,0,0,0,0,
    0,0,0,20,0,20,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,20,0,20,0,0,0,
    0,0,0,0,20,0,0,0,0,
    0,0,0,20,0,20,0,0,0
    };
static int SCORE_J[90]={
    0,0,0,2000,2000,2000,0,0,0,
    0,0,0,2000,2000,2000,0,0,0,
    0,0,0,2000,2000,2000,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,2000,2000,2000,0,0,0,
    0,0,0,2000,2000,2000,0,0,0,
    0,0,0,2000,2000,2000,0,0,0
};
static int SCORE_P[90]={
    50,50,50,50,50,50,50,50,50,
    50,50,50,50,50,50,50,50,50,
    50,50,50,50,50,50,50,50,50,
    50,50,50,50,70,50,50,50,50,
    50,50,50,50,70,50,50,50,50,
    50,50,50,50,70,50,50,50,50,
    50,50,50,50,70,50,50,50,50,
    50,50,50,50,50,50,50,50,50,
    50,50,50,50,50,50,50,50,50,
    50,50,50,50,50,50,50,50,50};
static int SCORE_B_BLACK[90]={
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    10,10,10,10,10,10,10,10,10,
    10,10,10,10,10,10,10,10,10,
    30,30,30,30,30,30,30,30,30,
    30,30,40,40,40,40,40,30,30,
    30,30,40,90,90,90,40,30,30,
    30,30,40,90,90,90,40,30,30,
    30,30,30,90,90,90,30,30,30};
static int SCORE_B_RED[90]={
    30,30,30,90,90,90,30,30,30,
    30,30,40,90,90,90,40,30,30,
    30,30,40,90,90,90,40,30,30,
    30,30,40,40,40,40,40,30,30,
    30,30,30,30,30,30,30,30,30,
    10,10,10,10,10,10,10,10,10,
    10,10,10,10,10,10,10,10,10,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,0,};
#endif // SCOREDATA_H
